<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.twd.take_a_walk_duo.mappers.IMemberMapper">

    <delete id="deleteUserByEmail"
            parameterType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        DELETE
        FROM `twd_member`.`users`
        WHERE `email` = #{email}
        LIMIT 1
    </delete>

    <insert id="insertUser"
            keyColumn="email"
            keyProperty="email"
            parameterType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        INSERT INTO `twd_member`.`users`(`email`, `password`, `nickname`, `name`, `contact`, `birth_year`,
                                         `birth_month`, `birth_day`, `gender`, `haveDog`, `species`, `address_postal`,
                                         `address_primary`, `address_secondary`)
        VALUES (#{email}, #{password}, #{nickname}, #{name},
                #{contact}, #{birthYear}, #{birthMonth}, #{birthDay}, #{gender}, #{haveDog},
                IFNULL(#{species}, DEFAULT(`species`)),
                #{addressPostal}, #{addressPrimary}, #{addressSecondary})
    </insert>

    <insert id="insertKakaoUser"
            keyColumn="id"
            keyProperty="id"
            parameterType="dev.twd.take_a_walk_duo.entities.member.KakaoUserEntity">
        INSERT INTO `twd_member`.`kakao_users`(`id`, `email`, `nickname`, `registered_on`, `user_flag`)
        VALUES (#{id}, #{email}, #{nickname}, IFNULL(#{registeredOn}, DEFAULT(`registered_on`)), #{isUser})
    </insert>

    <insert id="insertEmailAuth"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.twd.take_a_walk_duo.entities.member.EmailAuthEntity">
        INSERT INTO `twd_member`.`email_auths`(`email`, `code`, `salt`, `created_on`, `expires_on`, `expired_flag`)
        VALUES (#{email}, #{code}, #{salt}, #{createdOn}, #{expiresOn}, #{isExpired})
    </insert>

    <select id="selectUserById"
            resultType="dev.twd.take_a_walk_duo.entities.member.KakaoUserEntity">
        SELECT `id`            AS `id`,
               `email`         AS `email`,
               `nickname`      AS `nickname`,
               `registered_on` AS `registeredOn`,
               `user_flag`     AS `isUser`
        FROM `twd_member`.`kakao_users`
        WHERE `id` = #{id}
        LIMIT 1
    </select>

    <select id="selectKakaoUserByEmail"
            resultType="dev.twd.take_a_walk_duo.entities.member.KakaoUserEntity">
        SELECT `id`            AS `id`,
               `email`         AS `email`,
               `nickname`      AS `nickname`,
               `registered_on` AS `registeredOn`,
               `user_flag`     AS `isUser`
        FROM `twd_member`.`kakao_users`
        WHERE `email` = #{email}
        LIMIT 1
    </select>


    <select id="selectUserByEmail"
            resultType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `birth_year`        AS `birthYear`,
               `birth_month`       AS `birthMonth`,
               `birth_day`         AS `birthDay`,
               `gender`            AS `gender`,
               `haveDog`           AS `haveDog`,
               `species`           AS `species`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `isAdmin`
        FROM `twd_member`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1

    </select>

    <select id="selectUserByNameContact"
            resultType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `birth_year`        AS `birthYear`,
               `birth_month`       AS `birthMonth`,
               `birth_day`         AS `birthDay`,
               `gender`            AS `gender`,
               `haveDog`           AS `haveDog`,
               `species`           AS `species`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `twd_member`.`users`
        WHERE BINARY `name` = #{name}
          AND BINARY `contact` = #{contact}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByIndex"
            resultType="dev.twd.take_a_walk_duo.entities.member.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `twd_member`.`email_auths`
        WHERE `index` = #{index}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByEmailCodeSalt"
            resultType="dev.twd.take_a_walk_duo.entities.member.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `twd_member`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <update id="updateUser"
            parameterType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        UPDATE `twd_member`.`users`
        SET `password`          = #{password},
            `nickname`          = #{nickname},
            `name`              = #{name},
            `contact`           = #{contact},
            `birth_year`        = #{birthYear},
            `birth_month`       = #{birthMonth},
            `birth_day`         = #{birthDay},
            `gender`            = #{gender},
            `haveDog`           = #{haveDog},
            `species`           = #{species},
            `address_postal`    = #{addressPostal},
            `address_primary`   = #{addressPrimary},
            `address_secondary` = #{addressSecondary},
            `registered_on`     = #{registeredOn}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

    <update id="updateKakaoUser"
            parameterType="dev.twd.take_a_walk_duo.entities.member.KakaoUserEntity">
        UPDATE `twd_member`.`kakao_users`
        SET `id`            = #{id},
            `email`         = #{email},
            `nickname`      = #{nickname},
            `registered_on` = #{registeredOn},
            `user_flag`     = #{isUser}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

    <update id="updateEmailAuth"
            parameterType="dev.twd.take_a_walk_duo.entities.member.EmailAuthEntity">
        UPDATE `twd_member`.`email_auths`
        SET `email`        = #{email},
            `code`         = #{code},
            `salt`         = #{salt},
            `created_on`   = #{createdOn},
            `expires_on`   = #{expiresOn},
            `expired_flag` = #{isExpired}
        WHERE BINARY `index` = #{index}
        LIMIT 1
    </update>

    <delete id="deleteUser"
            parameterType="dev.twd.take_a_walk_duo.entities.member.UserEntity">
        DELETE
        FROM `twd_member`.`users`
        WHERE `email` = #{email}
        LIMIT 1
    </delete>

</mapper>