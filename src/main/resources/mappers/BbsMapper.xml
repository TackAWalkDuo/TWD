<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.twd.take_a_walk_duo.mappers.IBbsMapper">
    <select id="selectBoards" resultType="dev.twd.take_a_walk_duo.entities.bbs.BoardEntity">
        SELECT `id`    AS `id`,
               `text`  AS `text`,
               `order` AS `order`
        FROM `twd_bbs`.`boards`
        ORDER BY `order` LIMIT 4;
    </select>

    <select id="selectBoardById" resultType="dev.twd.take_a_walk_duo.entities.bbs.BoardEntity">
        SELECT `id`       AS `id`,
               `text`     AS `text`,
               `board_id` AS `boardId`,
               `order`    AS `order`
        FROM `twd_bbs`.`boards`
        WHERE BINARY `id` = #{bid}
            LIMIT 1;
    </select>
    <insert id="insertArticle"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.ArticleEntity">
        INSERT INTO `twd_bbs`.`articles`
        (`user_email`, `board_id`, `title`, `content`, `thumbnail`, `thumbnail_type`,
         `view`, `written_on`, `modified_on`)
        VALUES (#{userEmail}, #{boardId}, #{title}, #{content}, #{thumbnail}, #{thumbnailType}, #{view},
                IFNULL(#{writtenOn}, DEFAULT(`written_on`)), IFNULL(#{modifiedOn}, DEFAULT(`modified_on`)));
    </insert>
    <insert id="insertImage"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.ImageEntity">
        INSERT INTO `twd_bbs`.`images`
            (`index`, `file_name`, `file_mime`, `data`)
        VALUES (#{index}, #{fileName}, #{fileMime}, #{data})
    </insert>

    <select id="selectThumbnailByIndex"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.ArticleEntity">
        SELECT `index`          AS 'index',
               `thumbnail`      AS 'thumbnail',
               `thumbnail_type` AS 'thumbnailType'
        FROM `twd_bbs`.`articles`
        WHERE `index` = #{index}
    </select>
    <select id="selectArticleByIndex"
            resultType="dev.twd.take_a_walk_duo.vos.bbs.ArticleReadVo">
        SELECT `articles`.`index`                       AS `index`,
               `articles`.`user_email`                  AS `userEmail`,
               `articles`.`board_id`                    AS `boardId`,
               `articles`.`title`                       AS `title`,
               `articles`.`content`                     AS `content`,
               `articles`.`thumbnail`                   AS `thumbnail`,
               `articles`.`thumbnail_type`              AS `thumbnailType`,
               `articles`.`view`                        AS `view`,
               `articles`.`written_on`                  AS `writtenOn`,
               `articles`.`modified_on`                 AS `modifiedOn`,
               `user`.`nickname`                        AS `userNickname`,
               `user`.`species`                         AS `userSpecies`,
               COUNT(`aLikedCount`.`article_index`)     AS `articleLikedCount`,
               COUNT(`articleLike`.`article_index`) > 0 AS `articleLiked`
        FROM `twd_bbs`.`articles`
                 LEFT JOIN `twd_member`.`users` AS `user` on articles.user_email = user.email
                 LEFT JOIN `twd_bbs`.`article_likes` AS `aLikedCount`
                           on `articles`.`index` = `aLikedCount`.`article_index`
                 LEFT JOIN `twd_bbs`.`article_likes` AS `articleLike`
                           on `articles`.`index` = `articleLike`.`article_index`
                               AND `articleLike`.`user_email` = IFNULL(#{email}, '')
        WHERE `articles`.`index` = #{index}
        GROUP BY `articles`.`index` LIMIT 1;
    </select>

    <select id="selectBoardByBoardId"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.BoardEntity">
        SELECT `id`       AS `id`,
               `text`     AS `text`,
               `board_id` AS `boardId`,
               `order`    AS `order`
        FROM `twd_bbs`.`boards` AS `board`
        WHERE `board_id` = #{bid} OR `id` = #{bid}
        ORDER BY `order`;
    </select>

    <select id="selectImageByIndex"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.ImageEntity">
        SELECT `index`     AS `index`,
               `file_name` AS `fileName`,
               `file_mime` AS `fileMime`,
               `data`      AS `data`
        FROM `twd_bbs`.`images`
    </select>
    <update id="updateArticle"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.ArticleEntity">
        UPDATE `twd_bbs`.`articles`
        SET `user_email`     = #{userEmail},
            `board_id`       = #{boardId},
            `title`          = #{title},
            `content`        = #{content},
            `thumbnail`      = #{thumbnail},
            `thumbnail_type` = #{thumbnailType},
            `view`           = #{view},
            `written_on`     = #{writtenOn},
            `modified_on`    = #{modifiedOn}
        WHERE `index` = #{index}
        LIMIT 1
    </update>

    <insert id="insertComment"
            useGeneratedKeys="true"
            keyProperty="index"
            keyColumn="index"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.CommentEntity">
        INSERT INTO `twd_bbs`.`comments`(`comment_index`, `user_email`, `content`, `article_index`, `written_on`)
        VALUES (#{commentIndex}, #{userEmail}, #{content}, #{articleIndex},
                IFNULL(#{writtenOn}, DEFAULT(`written_on`)))
    </insert>

    <insert id="insertCommentImage"
            useGeneratedKeys="true"
            keyProperty="index"
            keyColumn="index"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.CommentImageEntity">
        INSERT INTO `twd_bbs`.`comment_images` (`comment_index`, `data`, `type`)
        VALUES (#{commentIndex}, #{data}, #{type})
    </insert>

    <select id="selectCommentByIndex"
            resultType="dev.twd.take_a_walk_duo.vos.bbs.CommentVo">
        SELECT `comment`.`index`         AS 'index',
               `comment`.`comment_index` AS 'commentIndex',
               `comment`.`user_email`    AS 'userEmail',
               `comment`.`content`       AS 'content',
               `comment`.`article_index` AS 'articleIndex',
               `comment`.`written_on`    AS 'writtenOn',
               `user`.`nickname`         AS 'nickname'
        FROM `twd_bbs`.`comments` AS `comment`
                 LEFT JOIN `twd_member`.`users` AS `user` ON `comment`.`user_email` = `user`.`email`
        WHERE `comment`.`article_index` = #{index}
    </select>

    <select id="selectCommentImagesByCommentIndexExceptData"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.CommentImageEntity">
        SELECT `index`         AS 'index',
               `comment_index` AS 'commentIndex'
        FROM `twd_bbs`.`comment_images` AS `comment_image`
        WHERE `comment_image`.`comment_index` = #{commentIndex}
    </select>


    <select id="selectCommentImageByIndex"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.CommentImageEntity">
        SELECT `index`         AS 'index',
               `comment_index` AS 'commentIndex',
               `data`          AS 'data',
               `type`          AS 'type'
        FROM `twd_bbs`.`comment_images` AS `comment_image`
        WHERE `comment_image`.`index` = #{index}
        LIMIT 1
    </select>
    <select id="selectArticleLikeByIndex"
            resultType="dev.twd.take_a_walk_duo.entities.bbs.ArticleLikeEntity">
        SELECT `user_email`  AS `userEmail`,
               article_index AS articleIndex,
               created_on    AS createdOn
        FROM `twd_bbs`.`article_likes`
        WHERE `article_index` = #{articleIndex}
    </select>
    <insert id="insertArticleLike"
            parameterType="dev.twd.take_a_walk_duo.entities.bbs.ArticleLikeEntity">
        INSERT INTO `twd_bbs`.`article_likes`(user_email, article_index, created_on)
        VALUES (#{userEmail}, #{articleIndex}, IFNULL(#{createdOn}, DEFAULT(`created_on`)));
    </insert>
    <delete id="deleteByArticleLiked">
        DELETE
        FROM `twd_bbs`.`article_likes`
        WHERE (`twd_bbs`.`article_likes`.`article_index` = #{articleIndex}) LIMIT 1;
    </delete>

    <delete id="deleteArticle">
        DELETE
        FROM `twd_bbs`.`articles`
        WHERE (`twd_bbs`.`articles`.`index` = #{index}) limit 1;
    </delete>

    <update id="updateComment"
    parameterType="dev.twd.take_a_walk_duo.entities.bbs.CommentEntity">
        UPDATE `twd_bbs`.`comments`
        SET `comment_index` = #{commentIndex},
            `user_email`    = #{userEmail},
            `content`       = #{content},
            `article_index` = #{articleIndex}
        WHERE `index` = #{index}
        LIMIT 1
    </update>

    <delete id="deleteCommentImage">
        DELETE
        FROM `twd_bbs`.`comment_images`
        WHERE `comment_index` = #{commentIndex}
    </delete>

    <delete id="deleteComment">
        DELETE
        FROM `twd_bbs`.`comments`
        WHERE `index` = #{index}
    </delete>

    <select id="selectArticlesByBoardId"
            resultType="dev.twd.take_a_walk_duo.vos.bbs.ArticleReadVo">
        SELECT `articles`.`index`       AS `index`,
               `articles`.`user_email`  AS `userEmail`,
               `articles`.`board_id`    AS `boardId`,
               `articles`.`title`       AS `title`,
               `articles`.`view`        AS `view`,
               `articles`.`written_on`  AS `writtenOn`,
               `articles`.`modified_on` AS `modifiedOn`,
               `users`.`nickname`       AS `userNickname`
        FROM `twd_bbs`.`articles`
                 LEFT JOIN twd_member.users on articles.user_email = users.email
                 LEFT JOIN `twd_bbs`.`boards` AS `board`
                     ON board.`board_id` = #{boardId} OR board.`id` = #{boardId}
        WHERE `articles`.`board_id` = board.id
        ORDER BY `articles`.`index` DESC
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="selectArticleCountByBoardId"
            resultType="int">
        SELECT COUNT(0)
        FROM `twd_bbs`.`articles`
        LEFT JOIN `twd_bbs`.`boards` AS `board`
        ON board.`board_id` = #{boardId} OR board.`id` = #{boardId}
        <if test="criterion !=null and criterion.equals('nickname')">
            LEFT JOIN `twd_member`.`users` ON articles.user_email = users.email
        </if>
        WHERE `articles`.`board_id` = board.id
        <if test="criterion !=null and criterion.equals('title')">
            AND REPLACE(`articles`.`title`,' ','') LIKE CONCAT('%',REPLACE(#{keyword},' ',''),'%')
        </if>
        <if test="criterion !=null and criterion.equals('all')">
            AND (REPLACE(`articles`.`title`,' ','') LIKE CONCAT('%',REPLACE(#{keyword},' ',''),'%')
            OR REPLACE(`articles`.`content`,' ','') LIKE CONCAT('%',REPLACE(#{keyword},' ',''),'%'))
        </if>
        <if test="criterion !=null and criterion.equals('nickname')">
            AND BINARY `users`.`nickname` = #{keyword}
        </if>
    </select>
</mapper>